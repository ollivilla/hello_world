# implementation of card game - Memory

import simplegui
import random

deck = range(8) + range(8)
random.shuffle(deck)
exposed = []
# line positions
line_pos1 = [25, 0]
line_pos2 = [25, 100]

# assign all values  to False in exposed list
for i in range(len(deck)): 
    exposed.append(False)

print deck

# helper function to initialize globals
def new_game():
    global cardsOpen
    cardsOpen = 0
    openCard1 = 0
    openCard2 = 0
    pass  

     
# define event handlers
def mouseclick(pos):
    global card_index, cardsOpen, openCard1, openCard2
      
    # determine index for cards
    card_index = pos[0] // 50
    
    # after clicking, add card into exposed list by index if it's already not there
    
    # do nothing if clicked on already exposed card
    if exposed[card_index] == True:
        return
    
    # if not exposed, then expose
    elif exposed[card_index] == False:
        exposed[card_index] = True
    
    # if no cards are exposed and you click on a card:
    # 1. the card must be set exposed
    # 2. set the state of openCards to 1
    # 3. assign the value of open card to the variable for later comparision
    
    if cardsOpen == 0:
        exposed[card_index] = True
        cardsOpen = 1
        openCard1 = deck[card_index]
        
        ################# remove the following later - this is for printing log:
        openCard2 = 0
    
    # if 1 card is open and you click on another card:
    # 1. the card must be set exposed
    # 2. set the state of openCards to 2
    # 3. assign the value of open card to the variable for later comparision
    
    elif cardsOpen == 1:
        exposed[card_index] = True
        cardsOpen = 2
        openCard2 = deck[card_index]
        # if they match:
        if openCard1 == openCard2:
            openCard2 = deck[card_index]
            print "Logi: Teise kaardi v22rtus",openCard2
            print "match"
            cardsOpen = 0
            return
        # if they don't match
        elif openCard1 != openCard2:
            print "no match"
            exposed[card_index] = True
            openCard2 = 1   
       
    
    # if 2 cards are opened
    elif cardsOpen == 2:       
        exposed[card_index] = True
        cardsOpen = 1
         
       
    print "Logi: Exposed", exposed
    print "Logi: State on",cardsOpen
    print "Logi: Esimese kaardi v22rtus",openCard1
    #print "Logi: Teise kaardi v22rtus",openCard2
   
   
    # add game state logic here
                        
# cards are logically 50x100 pixels in size    
def draw(canvas):
    global card_index, line_pos1, line_pos2
    line_pos1 = [25, 0]
    line_pos2 = [25, 100] 
    
   
    # draw slots on canvas with thick lines
    for card in range(len(deck)):
        canvas.draw_line(line_pos1, line_pos2, 48, 'Green')
        line_pos1[0] += 50
        line_pos2[0] += 50
               
        # if card is in exposed list, then draw the card's value in the correct slot
        # card_index + 8 is for fine-tuning of the position of the number
        if exposed[card] == True:	
            canvas.draw_text(str(deck[card]), [8 + (card * 50), 70], 65, 'White', 'sans-serif')	

        
# create frame and add a button and labels
frame = simplegui.create_frame("Memory", 800, 100)
frame.add_button("Reset", new_game)
label = frame.add_label("Turns = 0")

# register event handlers
frame.set_mouseclick_handler(mouseclick)
frame.set_draw_handler(draw)

# get things rolling
new_game()
frame.start()


# Always remember to review the grading rubric
