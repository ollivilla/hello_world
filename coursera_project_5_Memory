# implementation of card game - Memory

import simplegui
import random

deck = range(8) + range(8)
random.shuffle(deck)
exposed = []

# assign all values  to False in exposed list
for i in range(len(deck)): exposed.append(False)

print deck

# helper function to initialize globals
def new_game():
    global state
    state = 0
    pass  

     
# define event handlers
def mouseclick(pos):
    # add game state logic here
    global card_index, state, card
    compare1 = 0
    compare2 = 0
    
        
    # determine index for cards
    card_index = pos[0] // 50
    
    # after clicking, add card into exposed list by index if it's already not there
    
    if exposed[card_index] == False:
        exposed[card_index] = True
        print "BOOM"
    else:
        return


                        
# cards are logically 50x100 pixels in size    
def draw(canvas):
    
    # polygon positions
    poly1 = [0, 0]
    poly2 = [0, 100]
    poly3 = [50, 100]
    poly4 = [50, 0]        


    
    # draw polygons on canvas
    for card in range(len(deck)):
        canvas.draw_polygon([poly1, poly2, poly3, poly4], 2, 'Brown', 'Green')
        poly1[0] += 50
        poly2[0] += 50
        poly3[0] += 50
        poly4[0] += 50
        
        # if card is in exposed list, then draw the card's value in the correct slot
        # card_index + 8 is for fine-tuning of the position of the number
        if exposed[card] == True:
            if card_index == 0:
                canvas.draw_text(str(deck[card_index]), [(card_index + 8), 70], 65, 'White', 'sans-serif')	 
            elif card_index != 0:
                card_pos = [(card_index * 50 + 8), 70]
                canvas.draw_text(str(deck[card_index]), card_pos, 65, 'White', 'sans-serif')	

        


# create frame and add a button and labels
frame = simplegui.create_frame("Memory", 800, 100)
frame.add_button("Reset", new_game)
label = frame.add_label("Turns = 0")

# register event handlers
frame.set_mouseclick_handler(mouseclick)
frame.set_draw_handler(draw)

# get things rolling
new_game()
frame.start()


# Always remember to review the grading rubric
